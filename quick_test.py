#!/usr/bin/env python3
"""
Script pour tester la cr√©ation d'utilisateur via Django shell
"""
import os
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'keur_Doctor_app.settings')
django.setup()

from comptes.models import Utilisateur
from comptes.admin import UtilisateurCreationForm

def test_user_creation():
    """Test rapide de cr√©ation d'utilisateur"""
    
    # Supprimer l'utilisateur de test s'il existe
    Utilisateur.objects.filter(email='test.admin@example.com').delete()
    
    # Donn√©es de test
    form_data = {
        'email': 'test.admin@example.com',  
        'nom': 'TestAdmin',
        'prenom': 'Utilisateur',
        'role_autorise': 'medecin',
        'est_actif': True,
        'password1': 'TestPass123!',
        'password2': 'TestPass123!'
    }
    
    print("=== TEST CR√âATION UTILISATEUR ===")
    print(f"Email: {form_data['email']}")
    print(f"R√¥le: {form_data['role_autorise']}")
    
    # Cr√©er le formulaire
    form = UtilisateurCreationForm(data=form_data)
    
    if form.is_valid():
        print("‚úÖ Formulaire valide")
        user = form.save()
        print(f"‚úÖ Utilisateur cr√©√©: {user.email}")
        print(f"   ID: {user.id}")
        print(f"   Email: {user.email}")
        print(f"   R√¥le: {user.role_autorise}")
        
        # V√©rifier si l'email est bien d√©fini
        if user.email:
            print("‚úÖ Email correctement d√©fini dans Django")
        else:
            print("‚ùå Email manquant dans Django")
            
        return user
    else:
        print("‚ùå Erreurs de formulaire:")
        for field, errors in form.errors.items():
            print(f"   {field}: {errors}")
        return None

if __name__ == "__main__":
    test_user_creation()

print("\nüéâ Test termin√©!")
