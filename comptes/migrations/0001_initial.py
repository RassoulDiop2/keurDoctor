# Generated by Django 5.2.3 on 2025-07-06 02:38

import comptes.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('keycloak_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('prenom', models.CharField(max_length=100)),
                ('nom', models.CharField(max_length=100)),
                ('est_actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', comptes.models.UtilisateurManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('niveau_acces', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Administrateur',
                'verbose_name_plural': 'Administrateurs',
            },
        ),
        migrations.CreateModel(
            name='Medecin',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialite', models.CharField(max_length=100)),
                ('numero_praticien', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Médecin',
                'verbose_name_plural': 'Médecins',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_naissance', models.DateField()),
                ('numero_dossier', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='HistoriqueAuthentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_auth', models.CharField(choices=[('NFC_CARTE', 'Authentification par carte NFC'), ('EMPREINTE_NFC', 'Authentification par empreinte NFC'), ('AUTRE', 'Autre méthode')], max_length=20)),
                ('date_heure_acces', models.DateTimeField(auto_now_add=True)),
                ('succes', models.BooleanField()),
                ('adresse_ip', models.CharField(max_length=45)),
                ('user_agent', models.TextField()),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Historique d'authentification",
                'verbose_name_plural': "Historiques d'authentification",
                'ordering': ['-date_heure_acces'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueJournalisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_heure', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=255)),
                ('details', models.TextField()),
                ('type_evenement', models.CharField(choices=[('CREATION', 'Création'), ('MODIFICATION', 'Modification'), ('CONSULTATION', 'Consultation'), ('SUPPRESSION', 'Suppression'), ('SECURITE', 'Événement de sécurité')], max_length=20)),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Entrée de journal',
                'verbose_name_plural': 'Journal des événements',
                'ordering': ['-date_heure'],
            },
        ),
        migrations.CreateModel(
            name='DossierMedical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('resume', models.TextField()),
                ('path_fichier', models.CharField(max_length=255)),
                ('medecin_referent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='comptes.medecin')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.patient')),
            ],
            options={
                'verbose_name': 'Dossier médical',
                'verbose_name_plural': 'Dossiers médicaux',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_heure', models.DateTimeField()),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('CONFIRME', 'Confirmé'), ('ANNULE', 'Annulé')], default='EN_ATTENTE', max_length=20)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.medecin')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.patient')),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['date_heure'],
                'constraints': [models.UniqueConstraint(fields=('medecin', 'date_heure'), name='unique_medecin_time'), models.UniqueConstraint(fields=('patient', 'date_heure'), name='unique_patient_time')],
            },
        ),
    ]
